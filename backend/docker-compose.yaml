version: '3.8'

services:
  management1:
    image: container-registry.oracle.com/mysql/community-cluster
    container_name: management1
    restart: unless-stopped
    command: ndb_mgmd
    networks:
      cluster:
        ipv4_address: 192.168.0.2
    volumes:
      - mgmd_data:/var/lib/mysql-cluster

  ndb1:
    image: container-registry.oracle.com/mysql/community-cluster
    container_name: ndb1
    restart: unless-stopped
    command: ndbd
    networks:
      cluster:
        ipv4_address: 192.168.0.3
    volumes:
      - ndb1_data:/var/lib/mysql-cluster

  ndb2:
    image: container-registry.oracle.com/mysql/community-cluster
    container_name: ndb2
    restart: unless-stopped
    command: ndbd
    networks:
      cluster:
        ipv4_address: 192.168.0.4
    volumes:
      - ndb2_data:/var/lib/mysql-cluster

  mysql1:
    image: container-registry.oracle.com/mysql/community-cluster
    container_name: mysql1
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}   # contraseña de root
      MYSQL_DATABASE:      ${DB_NAME}            # crea la base ecomm
      MYSQL_USER:          ${DB_USER}            # crea api_user@'%'
      MYSQL_PASSWORD:      ${DB_PASS}            # contraseña de api_user
      MYSQL_ROOT_HOST:     '%'
    command: mysqld
    networks:
      cluster:
        ipv4_address: 192.168.0.10
    volumes:
      - mysql1_data:/var/lib/mysql
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql

networks:
  cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24

volumes:
  mgmd_data:
  ndb1_data:
  ndb2_data:
  mysql1_data:
